@page "/Musicas/Novo"

@inject ArtistaAPI artistaAPI
@inject GeneroAPI generoAPI
@inject MusicaAPI musicaAPI
@inject NavigationManager navigationManager


<MudPaper Class="px-8 pt-2 pb-4 mx-12 my-8" Justity="Justify.Center">
  <MudText Class="mt-8" Typo="Typo.h4">Cadastro de Música</MudText>

  <MudForm>

    <MudTextField Class="mt-4" T="string" Placeholder="Nome da música/canção"
                  @bind-Value="nome"
                  Variant="Variant.Outlined"
                  Required="true"
                  RequiredError="Campo obrigatório" />

    <MudNumericField Class="mt-4" Placeholder="Ano de lançamento"
                     @bind-Value="anoLancamento"
                     Variant="Variant.Outlined"
                     Lines="1"
                     Required="true"
                     RequiredError="Campo obrigatório" />

    <MudTextField Class="mt-4" T="string" Placeholder="Nome da discografia"
                  @bind-Value="discografia"
                  Variant="Variant.Outlined"
                  Required="true"
                  RequiredError="Campo obrigatório" />

    <MudSelect Class="mt-4" T="ArtistaResponse" Label="Artistas"
               Variant="Variant.Outlined" ValueChanged="ArtistaSelecionado" AnchorOrigin="Origin.BottomCenter">
      @if (artistas is not null)
      {
        @foreach (var artista in artistas)
        {
          <MudSelectItem Value="artista" />
        }
      }
    </MudSelect>

    <MudSelect Class="mt-4" T="GeneroResponse" Label="Géneros"
               Variant="Variant.Outlined" ValueChanged="GeneroSelecionado" AnchorOrigin="Origin.BottomCenter">
      @if (generos is not null)
      {
        @foreach (var genero in generos)
        {
          <MudSelectItem Value="genero" />
        }
      }
      @if (GenerosSelecionados is not null)
      {
        @foreach (var genero in GenerosSelecionados)
        {
          <MudAlert Severity="Severity.Info">@(genero.Nome) adicionadocomo gênero</MudAlert>
        }
      }
    </MudSelect>

    <div class="d-flex align-content-center justify-space-between mt-4">
      <MudButton Variant="Variant.Filled"
                 @onclick="CadastrarMusica"
                 Color="Color.Primary"
                 Class="ml-auto">Cadastrar</MudButton>

      <MudButton Variant="Variant.Filled"
                 @onclick="Voltar"
                 Color="Color.Info"
                 Class="ml-auto">Voltart</MudButton>
    </div>
  </MudForm>

</MudPaper>

@code {
  private string? nome;
  private int anoLancamento;
  private string? discografia;
  private string? descricaoDiscografia;

  private ICollection<ArtistaResponse>? artistas;
  private ICollection<GeneroResponse>? generos;

  private List<GeneroResponse>? GenerosSelecionados { get; set; } = new();
  private ArtistaResponse? ArtistaDaMusica { get; set; }

  private MusicaResponse? musica;

  protected override async Task OnInitializedAsync()
  {
    artistas = await artistaAPI.GetArtistasAsync();
    generos = await generoAPI.GetGenerosAsync();
  }

  private void ArtistaSelecionado(ArtistaResponse artista)
  {
    ArtistaDaMusica = artista;
  }

  private void GeneroSelecionado(GeneroResponse genero)
  {
    if (GenerosSelecionados is not null)
      if (!GenerosSelecionados.Contains(genero))
        GenerosSelecionados.Add(genero);
  }

  private List<GeneroRequest> GenerosRequest { get; set; } = new();
  private List<DiscografiaRequest> DisografiaRequest { get; set; } = new();
  private async Task CadastrarMusica()
  {
    if (string.IsNullOrWhiteSpace(discografia))
      DisografiaRequest.Add(new DiscografiaRequest(discografia!, descricaoDiscografia!));

    if (GenerosSelecionados is not null)
    {
      foreach (var genero in GenerosSelecionados!)
        GenerosRequest.Add(new GeneroRequest(genero.Nome, genero.Descricao));
    }

    var musicaReq = new MusicaRequest(nome!, ArtistaDaMusica!.Id, anoLancamento, GenerosRequest!, DisografiaRequest!);

    await musicaAPI.PostMusicaAsync(musicaReq);
    navigationManager.NavigateTo("Musicas/Generos");
  }

  private void Voltar()
  {
    navigationManager.NavigateTo("/Musicas/Generos");
  }
}
