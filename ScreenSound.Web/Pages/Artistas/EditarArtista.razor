@page "/Artistas/Editar/{NomeArtista}"

@inject ArtistaAPI artistaAPI
@inject NavigationManager navigationManager

<MudPaper Class="px-8 pt-2 pb-4 mx-12 my-8" Justify="Justify.Center">
  <MudText Class="mt-8" Typo="Typo.h4">Edição de Artista</MudText>

  <MudForm>

    <MudTextField Class="mt-4" T="string" Placeholder="Nome do Artista"
                  Variant="Variant.Outlined"
                  @bind-Value="nome"
                  Required="true"
                  RequiredError="Compo obrigatório" />

    <MudTextField Class="mt-4" T="string" Placeholder="Biografia do Artista"
                  Variant="Variant.Outlined"
                  @bind-Value="bio"
                  Lines="4"
                  Required="true"
                  RequiredError="Compo obrigatório" />
    <div class="d-flex align-center justify-space-between mt-4">
      <MudButton Variant="Variant.Filled"
                 @onclick="Atualizar"
                 Color="Color.Primary"
                 Class="ml-auto">Atualizar</MudButton>

      <MudButton Variant="Variant.Filled"
                 @onclick="Deletar"
                 Color="Color.Error"
                 Class="ml-auto">Deletar</MudButton>
    </div>
  </MudForm>

</MudPaper>

@code {
  private string? nome;
  private string? bio;

  [Parameter]
  public string? NomeArtista { get; set; }

  public ArtistaResponse? Artista { get; set; }

  protected override async Task OnInitializedAsync()
  {
    Artista = await artistaAPI.GetArtistaAsync(NomeArtista!);
    nome = Artista.Nome;
    bio = Artista.Bio;
  }

  private async Task Atualizar()
  {
    Artista!.Deconstruct(out int Id, out string Nome, out string Bio, out string? FotoPerfil);
    Nome = nome;
    Bio = bio;


    var artista = new ArtistaRequestEdit(Id, Nome, Bio, FotoPerfil);
    await artistaAPI.PutArtistaAsync(artista, artista.Id);
    navigationManager.NavigateTo("/Artistas");
  }

  private async Task Deletar()
  {
    await artistaAPI.DeleteArtistaAsync(Artista!.Id);
    navigationManager.NavigateTo("/Artistas");
  }
}